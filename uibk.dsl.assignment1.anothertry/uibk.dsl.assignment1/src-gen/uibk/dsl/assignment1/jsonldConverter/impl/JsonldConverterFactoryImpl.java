/**
 * generated by Xtext 2.12.0
 */
package uibk.dsl.assignment1.jsonldConverter.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import uibk.dsl.assignment1.jsonldConverter.DataType;
import uibk.dsl.assignment1.jsonldConverter.Entity;
import uibk.dsl.assignment1.jsonldConverter.EnumItem;
import uibk.dsl.assignment1.jsonldConverter.JsonldConverterFactory;
import uibk.dsl.assignment1.jsonldConverter.JsonldConverterPackage;
import uibk.dsl.assignment1.jsonldConverter.Model;
import uibk.dsl.assignment1.jsonldConverter.Property;
import uibk.dsl.assignment1.jsonldConverter.Type;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class JsonldConverterFactoryImpl extends EFactoryImpl implements JsonldConverterFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static JsonldConverterFactory init()
  {
    try
    {
      JsonldConverterFactory theJsonldConverterFactory = (JsonldConverterFactory)EPackage.Registry.INSTANCE.getEFactory(JsonldConverterPackage.eNS_URI);
      if (theJsonldConverterFactory != null)
      {
        return theJsonldConverterFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new JsonldConverterFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsonldConverterFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case JsonldConverterPackage.MODEL: return createModel();
      case JsonldConverterPackage.TYPE: return createType();
      case JsonldConverterPackage.DATA_TYPE: return createDataType();
      case JsonldConverterPackage.ENTITY: return createEntity();
      case JsonldConverterPackage.PROPERTY: return createProperty();
      case JsonldConverterPackage.ENUM: return createEnum();
      case JsonldConverterPackage.ENUM_ITEM: return createEnumItem();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataType createDataType()
  {
    DataTypeImpl dataType = new DataTypeImpl();
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public uibk.dsl.assignment1.jsonldConverter.Enum createEnum()
  {
    EnumImpl enum_ = new EnumImpl();
    return enum_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EnumItem createEnumItem()
  {
    EnumItemImpl enumItem = new EnumItemImpl();
    return enumItem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JsonldConverterPackage getJsonldConverterPackage()
  {
    return (JsonldConverterPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static JsonldConverterPackage getPackage()
  {
    return JsonldConverterPackage.eINSTANCE;
  }

} //JsonldConverterFactoryImpl
