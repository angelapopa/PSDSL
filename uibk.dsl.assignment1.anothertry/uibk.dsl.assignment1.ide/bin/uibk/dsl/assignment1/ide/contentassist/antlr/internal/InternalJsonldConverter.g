/*
 * generated by Xtext 2.12.0
 */
grammar InternalJsonldConverter;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package uibk.dsl.assignment1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uibk.dsl.assignment1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import uibk.dsl.assignment1.services.JsonldConverterGrammarAccess;

}
@parser::members {
	private JsonldConverterGrammarAccess grammarAccess;

	public void setGrammarAccess(JsonldConverterGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getElementsAssignment()); }
		(rule__Model__ElementsAssignment)*
		{ after(grammarAccess.getModelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnum
entryRuleEnum
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumAccess().getGroup()); }
		(rule__Enum__Group__0)
		{ after(grammarAccess.getEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumItem
entryRuleEnumItem
:
{ before(grammarAccess.getEnumItemRule()); }
	 ruleEnumItem
{ after(grammarAccess.getEnumItemRule()); } 
	 EOF 
;

// Rule EnumItem
ruleEnumItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumItemAccess().getGroup()); }
		(rule__EnumItem__Group__0)
		{ after(grammarAccess.getEnumItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEntityParserRuleCall_1()); }
		ruleEntity
		{ after(grammarAccess.getTypeAccess().getEntityParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getEnumParserRuleCall_2()); }
		ruleEnum
		{ after(grammarAccess.getTypeAccess().getEnumParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getUnorderedGroup_4()); }
	(rule__Entity__UnorderedGroup_4)?
	{ after(grammarAccess.getEntityAccess().getUnorderedGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getEntityAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
	(rule__Entity__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_4_1__0__Impl
	rule__Entity__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getEntityAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_4_1_1()); }
	(rule__Entity__FeaturesAssignment_4_1_1)
	{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
	(rule__Property__NameAssignment_0)
	{ after(grammarAccess.getPropertyAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPropertyAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getManyAssignment_2()); }
	(rule__Property__ManyAssignment_2)?
	{ after(grammarAccess.getPropertyAccess().getManyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__3__Impl
	rule__Property__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getOneAssignment_3()); }
	(rule__Property__OneAssignment_3)?
	{ after(grammarAccess.getPropertyAccess().getOneAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getTypeAssignment_4()); }
	(rule__Property__TypeAssignment_4)
	{ after(grammarAccess.getPropertyAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getNameAssignment_1()); }
	(rule__Enum__NameAssignment_1)
	{ after(grammarAccess.getEnumAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getGroup_3()); }
	(rule__Enum__Group_3__0)?
	{ after(grammarAccess.getEnumAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group_3__0__Impl
	rule__Enum__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getFeaturesAssignment_3_0()); }
	(rule__Enum__FeaturesAssignment_3_0)
	{ after(grammarAccess.getEnumAccess().getFeaturesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getGroup_3_1()); }
	(rule__Enum__Group_3_1__0)*
	{ after(grammarAccess.getEnumAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group_3_1__0__Impl
	rule__Enum__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getEnumAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Enum__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumAccess().getFeaturesAssignment_3_1_1()); }
	(rule__Enum__FeaturesAssignment_3_1_1)
	{ after(grammarAccess.getEnumAccess().getFeaturesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumItem__Group__0__Impl
	rule__EnumItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumItemAccess().getNameAssignment_0()); }
	(rule__EnumItem__NameAssignment_0)
	{ after(grammarAccess.getEnumItemAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumItem__Group__1__Impl
	rule__EnumItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumItemAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getEnumItemAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumItemAccess().getTypeAssignment_2()); }
	(rule__EnumItem__TypeAssignment_2)
	{ after(grammarAccess.getEnumItemAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__UnorderedGroup_4
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getEntityAccess().getUnorderedGroup_4());
	}
:
	rule__Entity__UnorderedGroup_4__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getEntityAccess().getUnorderedGroup_4())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getEntityAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__Entity__UnorderedGroup_4__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityAccess().getUnorderedGroup_4(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEntityAccess().getUnorderedGroup_4(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_4_0()); }
					(rule__Entity__FeaturesAssignment_4_0)
					{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_4_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getEntityAccess().getUnorderedGroup_4(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getEntityAccess().getUnorderedGroup_4(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getEntityAccess().getGroup_4_1()); }
						(rule__Entity__Group_4_1__0)
						{ after(grammarAccess.getEntityAccess().getGroup_4_1()); }
					)
					(
						{ before(grammarAccess.getEntityAccess().getGroup_4_1()); }
						((rule__Entity__Group_4_1__0)=>rule__Entity__Group_4_1__0)*
						{ after(grammarAccess.getEntityAccess().getGroup_4_1()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEntityAccess().getUnorderedGroup_4());
	restoreStackSize(stackSize);
}

rule__Entity__UnorderedGroup_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__UnorderedGroup_4__Impl
	rule__Entity__UnorderedGroup_4__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__UnorderedGroup_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__UnorderedGroup_4__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getModelAccess().getElementsTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getFeaturesPropertyParserRuleCall_4_0_0()); }
		ruleProperty
		{ after(grammarAccess.getEntityAccess().getFeaturesPropertyParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getFeaturesPropertyParserRuleCall_4_1_1_0()); }
		ruleProperty
		{ after(grammarAccess.getEntityAccess().getFeaturesPropertyParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ManyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getManyListKeyword_2_0()); }
		(
			{ before(grammarAccess.getPropertyAccess().getManyListKeyword_2_0()); }
			'list'
			{ after(grammarAccess.getPropertyAccess().getManyListKeyword_2_0()); }
		)
		{ after(grammarAccess.getPropertyAccess().getManyListKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__OneAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getOneOneKeyword_3_0()); }
		(
			{ before(grammarAccess.getPropertyAccess().getOneOneKeyword_3_0()); }
			'one'
			{ after(grammarAccess.getPropertyAccess().getOneOneKeyword_3_0()); }
		)
		{ after(grammarAccess.getPropertyAccess().getOneOneKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getTypeTypeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getPropertyAccess().getTypeTypeIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPropertyAccess().getTypeTypeIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getPropertyAccess().getTypeTypeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__FeaturesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumAccess().getFeaturesEnumItemParserRuleCall_3_0_0()); }
		ruleEnumItem
		{ after(grammarAccess.getEnumAccess().getFeaturesEnumItemParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__FeaturesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumAccess().getFeaturesEnumItemParserRuleCall_3_1_1_0()); }
		ruleEnumItem
		{ after(grammarAccess.getEnumAccess().getFeaturesEnumItemParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumItemAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumItemAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItem__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumItemAccess().getTypeSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getEnumItemAccess().getTypeSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_URL : '(((http|https|ftp)+:)?\\/\\/)?(([\\d\\w]|%[a-fA-f\\d]{2,2})+(:([\\d\\w]|%[a-fA-f\\d]{2,2})+)?@)?([\\d\\w][-\\d\\w]{0,253}[\\d\\w]\\.)+[\\w]{2,63}(:[\\d]+)?(\\/([-+_~.\\d\\w]|%[a-fA-f\\d]{2,2})*)*(\\?(&?([-+_~.\\d\\w]|%[a-fA-f\\d]{2,2})=?)*)?(#([-+_~.\\d\\w]|%[a-fA-f\\d]{2,2})*)?';

RULE_DATE : '([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))T([01]?\\d|2[0-3]):([0-5]\\d)?([0-5]\\d)';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
