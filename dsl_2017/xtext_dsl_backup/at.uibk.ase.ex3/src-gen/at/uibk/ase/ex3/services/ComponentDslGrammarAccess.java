/*
 * generated by Xtext 2.11.0
 */
package at.uibk.ase.ex3.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ComponentDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEntitiesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cEntitiesEntityParserRuleCall_0_0 = (RuleCall)cEntitiesAssignment_0.eContents().get(0);
		private final Assignment cActionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_1_0 = (RuleCall)cActionsAssignment_1.eContents().get(0);
		
		//Model:
		//	entities+=Entity+
		//	actions+=Action+;
		@Override public ParserRule getRule() { return rule; }
		
		//entities+=Entity+ actions+=Action+
		public Group getGroup() { return cGroup; }
		
		//entities+=Entity+
		public Assignment getEntitiesAssignment_0() { return cEntitiesAssignment_0; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_0_0() { return cEntitiesEntityParserRuleCall_0_0; }
		
		//actions+=Action+
		public Assignment getActionsAssignment_1() { return cActionsAssignment_1; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_1_0() { return cActionsActionParserRuleCall_1_0; }
	}
	public class EntityBaseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.EntityBaseType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cGroupKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Action cGroupAction_0_1 = (Action)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cMemberKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Action cMemberAction_1_1 = (Action)cGroup_1.eContents().get(1);
		
		//EntityBaseType:
		//	'Group' {Group} | 'Member' {Member};
		@Override public ParserRule getRule() { return rule; }
		
		//'Group' {Group} | 'Member' {Member}
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'Group' {Group}
		public Group getGroup_0() { return cGroup_0; }
		
		//'Group'
		public Keyword getGroupKeyword_0_0() { return cGroupKeyword_0_0; }
		
		//{Group}
		public Action getGroupAction_0_1() { return cGroupAction_0_1; }
		
		//'Member' {Member}
		public Group getGroup_1() { return cGroup_1; }
		
		//'Member'
		public Keyword getMemberKeyword_1_0() { return cMemberKeyword_1_0; }
		
		//{Member}
		public Action getMemberAction_1_1() { return cMemberAction_1_1; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExtendsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParentEntityBaseTypeParserRuleCall_3_0 = (RuleCall)cParentAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAttributesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAttributesAttributeParserRuleCall_5_0 = (RuleCall)cAttributesAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Entity:
		//	'entity' name=ID 'extends' parent=EntityBaseType '{'
		//	attributes+=Attribute*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' name=ID 'extends' parent=EntityBaseType '{' attributes+=Attribute* '}'
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'extends'
		public Keyword getExtendsKeyword_2() { return cExtendsKeyword_2; }
		
		//parent=EntityBaseType
		public Assignment getParentAssignment_3() { return cParentAssignment_3; }
		
		//EntityBaseType
		public RuleCall getParentEntityBaseTypeParserRuleCall_3_0() { return cParentEntityBaseTypeParserRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_5() { return cAttributesAssignment_5; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_5_0() { return cAttributesAttributeParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeAttributeTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Attribute:
		//	type=AttributeType name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//type=AttributeType name=ID
		public Group getGroup() { return cGroup; }
		
		//type=AttributeType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//AttributeType
		public RuleCall getTypeAttributeTypeParserRuleCall_0_0() { return cTypeAttributeTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}
	public class AttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.AttributeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementTypeElementTypeParserRuleCall_0_0 = (RuleCall)cElementTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cArrayAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cArrayLeftSquareBracketKeyword_1_0_0 = (Keyword)cArrayAssignment_1_0.eContents().get(0);
		private final Assignment cLengthAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLengthINTTerminalRuleCall_1_1_0 = (RuleCall)cLengthAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//AttributeType:
		//	elementType=ElementType (array?='[' length=INT? ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//elementType=ElementType (array?='[' length=INT? ']')?
		public Group getGroup() { return cGroup; }
		
		//elementType=ElementType
		public Assignment getElementTypeAssignment_0() { return cElementTypeAssignment_0; }
		
		//ElementType
		public RuleCall getElementTypeElementTypeParserRuleCall_0_0() { return cElementTypeElementTypeParserRuleCall_0_0; }
		
		//(array?='[' length=INT? ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//array?='['
		public Assignment getArrayAssignment_1_0() { return cArrayAssignment_1_0; }
		
		//'['
		public Keyword getArrayLeftSquareBracketKeyword_1_0_0() { return cArrayLeftSquareBracketKeyword_1_0_0; }
		
		//length=INT?
		public Assignment getLengthAssignment_1_1() { return cLengthAssignment_1_1; }
		
		//INT
		public RuleCall getLengthINTTerminalRuleCall_1_1_0() { return cLengthINTTerminalRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	public class ElementTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.ElementType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBasicTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ElementType:
		//	BasicType | EntityType;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicType | EntityType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BasicType
		public RuleCall getBasicTypeParserRuleCall_0() { return cBasicTypeParserRuleCall_0; }
		
		//EntityType
		public RuleCall getEntityTypeParserRuleCall_1() { return cEntityTypeParserRuleCall_1; }
	}
	public class BasicTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.BasicType");
		private final Assignment cTypeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTypeNameAlternatives_0 = (Alternatives)cTypeNameAssignment.eContents().get(0);
		private final Keyword cTypeNameStringKeyword_0_0 = (Keyword)cTypeNameAlternatives_0.eContents().get(0);
		private final Keyword cTypeNameIntKeyword_0_1 = (Keyword)cTypeNameAlternatives_0.eContents().get(1);
		private final Keyword cTypeNameBooleanKeyword_0_2 = (Keyword)cTypeNameAlternatives_0.eContents().get(2);
		private final Keyword cTypeNameVersionKeyword_0_3 = (Keyword)cTypeNameAlternatives_0.eContents().get(3);
		
		//BasicType:
		//	typeName=('String' | 'Int' | 'Boolean' | 'Version');
		@Override public ParserRule getRule() { return rule; }
		
		//typeName=('String' | 'Int' | 'Boolean' | 'Version')
		public Assignment getTypeNameAssignment() { return cTypeNameAssignment; }
		
		//('String' | 'Int' | 'Boolean' | 'Version')
		public Alternatives getTypeNameAlternatives_0() { return cTypeNameAlternatives_0; }
		
		//'String'
		public Keyword getTypeNameStringKeyword_0_0() { return cTypeNameStringKeyword_0_0; }
		
		//'Int'
		public Keyword getTypeNameIntKeyword_0_1() { return cTypeNameIntKeyword_0_1; }
		
		//'Boolean'
		public Keyword getTypeNameBooleanKeyword_0_2() { return cTypeNameBooleanKeyword_0_2; }
		
		//'Version'
		public Keyword getTypeNameVersionKeyword_0_3() { return cTypeNameVersionKeyword_0_3; }
	}
	public class EntityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.EntityType");
		private final Assignment cEntityAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cEntityEntityCrossReference_0 = (CrossReference)cEntityAssignment.eContents().get(0);
		private final RuleCall cEntityEntityIDTerminalRuleCall_0_1 = (RuleCall)cEntityEntityCrossReference_0.eContents().get(1);
		
		//EntityType:
		//	entity=[Entity];
		@Override public ParserRule getRule() { return rule; }
		
		//entity=[Entity]
		public Assignment getEntityAssignment() { return cEntityAssignment; }
		
		//[Entity]
		public CrossReference getEntityEntityCrossReference_0() { return cEntityEntityCrossReference_0; }
		
		//ID
		public RuleCall getEntityEntityIDTerminalRuleCall_0_1() { return cEntityEntityIDTerminalRuleCall_0_1; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCreateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAddParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAddResponsibilityParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAddDependencyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSizeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cOrderParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCycleParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Action:
		//	Create | Add | AddResponsibility | AddDependency | Size | Order | Cycle;
		@Override public ParserRule getRule() { return rule; }
		
		//Create | Add | AddResponsibility | AddDependency | Size | Order | Cycle
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Create
		public RuleCall getCreateParserRuleCall_0() { return cCreateParserRuleCall_0; }
		
		//Add
		public RuleCall getAddParserRuleCall_1() { return cAddParserRuleCall_1; }
		
		//AddResponsibility
		public RuleCall getAddResponsibilityParserRuleCall_2() { return cAddResponsibilityParserRuleCall_2; }
		
		//AddDependency
		public RuleCall getAddDependencyParserRuleCall_3() { return cAddDependencyParserRuleCall_3; }
		
		//Size
		public RuleCall getSizeParserRuleCall_4() { return cSizeParserRuleCall_4; }
		
		//Order
		public RuleCall getOrderParserRuleCall_5() { return cOrderParserRuleCall_5; }
		
		//Cycle
		public RuleCall getCycleParserRuleCall_6() { return cCycleParserRuleCall_6; }
	}
	public class CreateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Create");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCreateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cEntityTypeParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVersionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVersionVERSIONTerminalRuleCall_5_0 = (RuleCall)cVersionAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Create:
		//	'create' EntityType '(' name=STRING ',' version=VERSION ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'create' EntityType '(' name=STRING ',' version=VERSION ')'
		public Group getGroup() { return cGroup; }
		
		//'create'
		public Keyword getCreateKeyword_0() { return cCreateKeyword_0; }
		
		//EntityType
		public RuleCall getEntityTypeParserRuleCall_1() { return cEntityTypeParserRuleCall_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//version=VERSION
		public Assignment getVersionAssignment_5() { return cVersionAssignment_5; }
		
		//VERSION
		public RuleCall getVersionVERSIONTerminalRuleCall_5_0() { return cVersionVERSIONTerminalRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}
	public class AddElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Add");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSourceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSourceEntityTypeParserRuleCall_1_0 = (RuleCall)cSourceAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSourceNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cSourceNameAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSourceVersionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSourceVersionVERSIONTerminalRuleCall_5_0 = (RuleCall)cSourceVersionAssignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cToKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDestAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDestEntityTypeParserRuleCall_8_0 = (RuleCall)cDestAssignment_8.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cDestinationNameAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cDestinationNameSTRINGTerminalRuleCall_10_0 = (RuleCall)cDestinationNameAssignment_10.eContents().get(0);
		private final Keyword cCommaKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cDestinationVersionAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cDestinationVersionVERSIONTerminalRuleCall_12_0 = (RuleCall)cDestinationVersionAssignment_12.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Add:
		//	'add' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'to' dest=EntityType '('
		//	destinationName=STRING ',' destinationVersion=VERSION ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'add' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'to' dest=EntityType '('
		//destinationName=STRING ',' destinationVersion=VERSION ')'
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//source=EntityType
		public Assignment getSourceAssignment_1() { return cSourceAssignment_1; }
		
		//EntityType
		public RuleCall getSourceEntityTypeParserRuleCall_1_0() { return cSourceEntityTypeParserRuleCall_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//sourceName=STRING
		public Assignment getSourceNameAssignment_3() { return cSourceNameAssignment_3; }
		
		//STRING
		public RuleCall getSourceNameSTRINGTerminalRuleCall_3_0() { return cSourceNameSTRINGTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//sourceVersion=VERSION
		public Assignment getSourceVersionAssignment_5() { return cSourceVersionAssignment_5; }
		
		//VERSION
		public RuleCall getSourceVersionVERSIONTerminalRuleCall_5_0() { return cSourceVersionVERSIONTerminalRuleCall_5_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//'to'
		public Keyword getToKeyword_7() { return cToKeyword_7; }
		
		//dest=EntityType
		public Assignment getDestAssignment_8() { return cDestAssignment_8; }
		
		//EntityType
		public RuleCall getDestEntityTypeParserRuleCall_8_0() { return cDestEntityTypeParserRuleCall_8_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }
		
		//destinationName=STRING
		public Assignment getDestinationNameAssignment_10() { return cDestinationNameAssignment_10; }
		
		//STRING
		public RuleCall getDestinationNameSTRINGTerminalRuleCall_10_0() { return cDestinationNameSTRINGTerminalRuleCall_10_0; }
		
		//','
		public Keyword getCommaKeyword_11() { return cCommaKeyword_11; }
		
		//destinationVersion=VERSION
		public Assignment getDestinationVersionAssignment_12() { return cDestinationVersionAssignment_12; }
		
		//VERSION
		public RuleCall getDestinationVersionVERSIONTerminalRuleCall_12_0() { return cDestinationVersionVERSIONTerminalRuleCall_12_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_13() { return cRightParenthesisKeyword_13; }
	}
	public class AddResponsibilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.AddResponsibility");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cResponsibilityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDestAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDestEntityTypeParserRuleCall_6_0 = (RuleCall)cDestAssignment_6.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cSourceNameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cSourceNameSTRINGTerminalRuleCall_8_0 = (RuleCall)cSourceNameAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cSourceVersionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSourceVersionVERSIONTerminalRuleCall_10_0 = (RuleCall)cSourceVersionAssignment_10.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//AddResponsibility:
		//	'add' 'responsibility' '(' name=STRING ')' 'to' dest=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'add' 'responsibility' '(' name=STRING ')' 'to' dest=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')'
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//'responsibility'
		public Keyword getResponsibilityKeyword_1() { return cResponsibilityKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//dest=EntityType
		public Assignment getDestAssignment_6() { return cDestAssignment_6; }
		
		//EntityType
		public RuleCall getDestEntityTypeParserRuleCall_6_0() { return cDestEntityTypeParserRuleCall_6_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7() { return cLeftParenthesisKeyword_7; }
		
		//sourceName=STRING
		public Assignment getSourceNameAssignment_8() { return cSourceNameAssignment_8; }
		
		//STRING
		public RuleCall getSourceNameSTRINGTerminalRuleCall_8_0() { return cSourceNameSTRINGTerminalRuleCall_8_0; }
		
		//','
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }
		
		//sourceVersion=VERSION
		public Assignment getSourceVersionAssignment_10() { return cSourceVersionAssignment_10; }
		
		//VERSION
		public RuleCall getSourceVersionVERSIONTerminalRuleCall_10_0() { return cSourceVersionVERSIONTerminalRuleCall_10_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_11() { return cRightParenthesisKeyword_11; }
	}
	public class AddDependencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.AddDependency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAddKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDependencyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSourceEntityTypeParserRuleCall_2_0 = (RuleCall)cSourceAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceNameAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSourceVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSourceVersionVERSIONTerminalRuleCall_6_0 = (RuleCall)cSourceVersionAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cToKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDestAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDestEntityTypeParserRuleCall_9_0 = (RuleCall)cDestAssignment_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cDestinationNameAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cDestinationNameSTRINGTerminalRuleCall_11_0 = (RuleCall)cDestinationNameAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cDestinationVersionAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDestinationVersionVERSIONTerminalRuleCall_13_0 = (RuleCall)cDestinationVersionAssignment_13.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//AddDependency:
		//	'add' 'dependency' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'to' dest=EntityType '('
		//	destinationName=STRING ',' destinationVersion=VERSION ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'add' 'dependency' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'to' dest=EntityType '('
		//destinationName=STRING ',' destinationVersion=VERSION ')'
		public Group getGroup() { return cGroup; }
		
		//'add'
		public Keyword getAddKeyword_0() { return cAddKeyword_0; }
		
		//'dependency'
		public Keyword getDependencyKeyword_1() { return cDependencyKeyword_1; }
		
		//source=EntityType
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }
		
		//EntityType
		public RuleCall getSourceEntityTypeParserRuleCall_2_0() { return cSourceEntityTypeParserRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//sourceName=STRING
		public Assignment getSourceNameAssignment_4() { return cSourceNameAssignment_4; }
		
		//STRING
		public RuleCall getSourceNameSTRINGTerminalRuleCall_4_0() { return cSourceNameSTRINGTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//sourceVersion=VERSION
		public Assignment getSourceVersionAssignment_6() { return cSourceVersionAssignment_6; }
		
		//VERSION
		public RuleCall getSourceVersionVERSIONTerminalRuleCall_6_0() { return cSourceVersionVERSIONTerminalRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'to'
		public Keyword getToKeyword_8() { return cToKeyword_8; }
		
		//dest=EntityType
		public Assignment getDestAssignment_9() { return cDestAssignment_9; }
		
		//EntityType
		public RuleCall getDestEntityTypeParserRuleCall_9_0() { return cDestEntityTypeParserRuleCall_9_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_10() { return cLeftParenthesisKeyword_10; }
		
		//destinationName=STRING
		public Assignment getDestinationNameAssignment_11() { return cDestinationNameAssignment_11; }
		
		//STRING
		public RuleCall getDestinationNameSTRINGTerminalRuleCall_11_0() { return cDestinationNameSTRINGTerminalRuleCall_11_0; }
		
		//','
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//destinationVersion=VERSION
		public Assignment getDestinationVersionAssignment_13() { return cDestinationVersionAssignment_13; }
		
		//VERSION
		public RuleCall getDestinationVersionVERSIONTerminalRuleCall_13_0() { return cDestinationVersionVERSIONTerminalRuleCall_13_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_14() { return cRightParenthesisKeyword_14; }
	}
	public class SizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Size");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSizeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSourceEntityTypeParserRuleCall_2_0 = (RuleCall)cSourceAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceNameAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSourceVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSourceVersionVERSIONTerminalRuleCall_6_0 = (RuleCall)cSourceVersionAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////TODO return types
		//Size:
		//	'size' 'of' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'size' 'of' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')'
		public Group getGroup() { return cGroup; }
		
		//'size'
		public Keyword getSizeKeyword_0() { return cSizeKeyword_0; }
		
		//'of'
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }
		
		//source=EntityType
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }
		
		//EntityType
		public RuleCall getSourceEntityTypeParserRuleCall_2_0() { return cSourceEntityTypeParserRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//sourceName=STRING
		public Assignment getSourceNameAssignment_4() { return cSourceNameAssignment_4; }
		
		//STRING
		public RuleCall getSourceNameSTRINGTerminalRuleCall_4_0() { return cSourceNameSTRINGTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//sourceVersion=VERSION
		public Assignment getSourceVersionAssignment_6() { return cSourceVersionAssignment_6; }
		
		//VERSION
		public RuleCall getSourceVersionVERSIONTerminalRuleCall_6_0() { return cSourceVersionVERSIONTerminalRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
	}
	public class OrderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Order");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOrderKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cForKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSourceEntityTypeParserRuleCall_3_0 = (RuleCall)cSourceAssignment_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSourceNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSourceNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cSourceNameAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSourceVersionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSourceVersionVERSIONTerminalRuleCall_7_0 = (RuleCall)cSourceVersionAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Order:
		//	'project' 'order' 'for' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'project' 'order' 'for' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')'
		public Group getGroup() { return cGroup; }
		
		//'project'
		public Keyword getProjectKeyword_0() { return cProjectKeyword_0; }
		
		//'order'
		public Keyword getOrderKeyword_1() { return cOrderKeyword_1; }
		
		//'for'
		public Keyword getForKeyword_2() { return cForKeyword_2; }
		
		//source=EntityType
		public Assignment getSourceAssignment_3() { return cSourceAssignment_3; }
		
		//EntityType
		public RuleCall getSourceEntityTypeParserRuleCall_3_0() { return cSourceEntityTypeParserRuleCall_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//sourceName=STRING
		public Assignment getSourceNameAssignment_5() { return cSourceNameAssignment_5; }
		
		//STRING
		public RuleCall getSourceNameSTRINGTerminalRuleCall_5_0() { return cSourceNameSTRINGTerminalRuleCall_5_0; }
		
		//','
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }
		
		//sourceVersion=VERSION
		public Assignment getSourceVersionAssignment_7() { return cSourceVersionAssignment_7; }
		
		//VERSION
		public RuleCall getSourceVersionVERSIONTerminalRuleCall_7_0() { return cSourceVersionVERSIONTerminalRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
	}
	public class CycleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.Cycle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCycleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cBetweenKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSourceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSourceEntityTypeParserRuleCall_2_0 = (RuleCall)cSourceAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cSourceNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSourceNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cSourceNameAssignment_4.eContents().get(0);
		private final Keyword cCommaKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSourceVersionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSourceVersionVERSIONTerminalRuleCall_6_0 = (RuleCall)cSourceVersionAssignment_6.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cAndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cDestAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDestEntityTypeParserRuleCall_9_0 = (RuleCall)cDestAssignment_9.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cDestinationNameAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cDestinationNameSTRINGTerminalRuleCall_11_0 = (RuleCall)cDestinationNameAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cDestinationVersionAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cDestinationVersionVERSIONTerminalRuleCall_13_0 = (RuleCall)cDestinationVersionAssignment_13.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Cycle:
		//	'cycle' 'between' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'and' dest=EntityType '('
		//	destinationName=STRING ',' destinationVersion=VERSION ')';
		@Override public ParserRule getRule() { return rule; }
		
		//'cycle' 'between' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'and' dest=EntityType '('
		//destinationName=STRING ',' destinationVersion=VERSION ')'
		public Group getGroup() { return cGroup; }
		
		//'cycle'
		public Keyword getCycleKeyword_0() { return cCycleKeyword_0; }
		
		//'between'
		public Keyword getBetweenKeyword_1() { return cBetweenKeyword_1; }
		
		//source=EntityType
		public Assignment getSourceAssignment_2() { return cSourceAssignment_2; }
		
		//EntityType
		public RuleCall getSourceEntityTypeParserRuleCall_2_0() { return cSourceEntityTypeParserRuleCall_2_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//sourceName=STRING
		public Assignment getSourceNameAssignment_4() { return cSourceNameAssignment_4; }
		
		//STRING
		public RuleCall getSourceNameSTRINGTerminalRuleCall_4_0() { return cSourceNameSTRINGTerminalRuleCall_4_0; }
		
		//','
		public Keyword getCommaKeyword_5() { return cCommaKeyword_5; }
		
		//sourceVersion=VERSION
		public Assignment getSourceVersionAssignment_6() { return cSourceVersionAssignment_6; }
		
		//VERSION
		public RuleCall getSourceVersionVERSIONTerminalRuleCall_6_0() { return cSourceVersionVERSIONTerminalRuleCall_6_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'and'
		public Keyword getAndKeyword_8() { return cAndKeyword_8; }
		
		//dest=EntityType
		public Assignment getDestAssignment_9() { return cDestAssignment_9; }
		
		//EntityType
		public RuleCall getDestEntityTypeParserRuleCall_9_0() { return cDestEntityTypeParserRuleCall_9_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_10() { return cLeftParenthesisKeyword_10; }
		
		//destinationName=STRING
		public Assignment getDestinationNameAssignment_11() { return cDestinationNameAssignment_11; }
		
		//STRING
		public RuleCall getDestinationNameSTRINGTerminalRuleCall_11_0() { return cDestinationNameSTRINGTerminalRuleCall_11_0; }
		
		//','
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//destinationVersion=VERSION
		public Assignment getDestinationVersionAssignment_13() { return cDestinationVersionAssignment_13; }
		
		//VERSION
		public RuleCall getDestinationVersionVERSIONTerminalRuleCall_13_0() { return cDestinationVersionVERSIONTerminalRuleCall_13_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_14() { return cRightParenthesisKeyword_14; }
	}
	
	
	private final ModelElements pModel;
	private final TerminalRule tVERSION;
	private final EntityBaseTypeElements pEntityBaseType;
	private final EntityElements pEntity;
	private final AttributeElements pAttribute;
	private final AttributeTypeElements pAttributeType;
	private final ElementTypeElements pElementType;
	private final BasicTypeElements pBasicType;
	private final EntityTypeElements pEntityType;
	private final ActionElements pAction;
	private final CreateElements pCreate;
	private final AddElements pAdd;
	private final AddResponsibilityElements pAddResponsibility;
	private final AddDependencyElements pAddDependency;
	private final SizeElements pSize;
	private final OrderElements pOrder;
	private final CycleElements pCycle;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ComponentDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.tVERSION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "at.uibk.ase.ex3.ComponentDsl.VERSION");
		this.pEntityBaseType = new EntityBaseTypeElements();
		this.pEntity = new EntityElements();
		this.pAttribute = new AttributeElements();
		this.pAttributeType = new AttributeTypeElements();
		this.pElementType = new ElementTypeElements();
		this.pBasicType = new BasicTypeElements();
		this.pEntityType = new EntityTypeElements();
		this.pAction = new ActionElements();
		this.pCreate = new CreateElements();
		this.pAdd = new AddElements();
		this.pAddResponsibility = new AddResponsibilityElements();
		this.pAddDependency = new AddDependencyElements();
		this.pSize = new SizeElements();
		this.pOrder = new OrderElements();
		this.pCycle = new CycleElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.uibk.ase.ex3.ComponentDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	entities+=Entity+
	//	actions+=Action+;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//terminal VERSION:
	//	INT '.' INT '.' INT ('-' ID)?;
	public TerminalRule getVERSIONRule() {
		return tVERSION;
	}
	
	//EntityBaseType:
	//	'Group' {Group} | 'Member' {Member};
	public EntityBaseTypeElements getEntityBaseTypeAccess() {
		return pEntityBaseType;
	}
	
	public ParserRule getEntityBaseTypeRule() {
		return getEntityBaseTypeAccess().getRule();
	}
	
	//Entity:
	//	'entity' name=ID 'extends' parent=EntityBaseType '{'
	//	attributes+=Attribute*
	//	'}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Attribute:
	//	type=AttributeType name=ID;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//AttributeType:
	//	elementType=ElementType (array?='[' length=INT? ']')?;
	public AttributeTypeElements getAttributeTypeAccess() {
		return pAttributeType;
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//ElementType:
	//	BasicType | EntityType;
	public ElementTypeElements getElementTypeAccess() {
		return pElementType;
	}
	
	public ParserRule getElementTypeRule() {
		return getElementTypeAccess().getRule();
	}
	
	//BasicType:
	//	typeName=('String' | 'Int' | 'Boolean' | 'Version');
	public BasicTypeElements getBasicTypeAccess() {
		return pBasicType;
	}
	
	public ParserRule getBasicTypeRule() {
		return getBasicTypeAccess().getRule();
	}
	
	//EntityType:
	//	entity=[Entity];
	public EntityTypeElements getEntityTypeAccess() {
		return pEntityType;
	}
	
	public ParserRule getEntityTypeRule() {
		return getEntityTypeAccess().getRule();
	}
	
	//Action:
	//	Create | Add | AddResponsibility | AddDependency | Size | Order | Cycle;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Create:
	//	'create' EntityType '(' name=STRING ',' version=VERSION ')';
	public CreateElements getCreateAccess() {
		return pCreate;
	}
	
	public ParserRule getCreateRule() {
		return getCreateAccess().getRule();
	}
	
	//Add:
	//	'add' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'to' dest=EntityType '('
	//	destinationName=STRING ',' destinationVersion=VERSION ')';
	public AddElements getAddAccess() {
		return pAdd;
	}
	
	public ParserRule getAddRule() {
		return getAddAccess().getRule();
	}
	
	//AddResponsibility:
	//	'add' 'responsibility' '(' name=STRING ')' 'to' dest=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')';
	public AddResponsibilityElements getAddResponsibilityAccess() {
		return pAddResponsibility;
	}
	
	public ParserRule getAddResponsibilityRule() {
		return getAddResponsibilityAccess().getRule();
	}
	
	//AddDependency:
	//	'add' 'dependency' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'to' dest=EntityType '('
	//	destinationName=STRING ',' destinationVersion=VERSION ')';
	public AddDependencyElements getAddDependencyAccess() {
		return pAddDependency;
	}
	
	public ParserRule getAddDependencyRule() {
		return getAddDependencyAccess().getRule();
	}
	
	////TODO return types
	//Size:
	//	'size' 'of' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')';
	public SizeElements getSizeAccess() {
		return pSize;
	}
	
	public ParserRule getSizeRule() {
		return getSizeAccess().getRule();
	}
	
	//Order:
	//	'project' 'order' 'for' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')';
	public OrderElements getOrderAccess() {
		return pOrder;
	}
	
	public ParserRule getOrderRule() {
		return getOrderAccess().getRule();
	}
	
	//Cycle:
	//	'cycle' 'between' source=EntityType '(' sourceName=STRING ',' sourceVersion=VERSION ')' 'and' dest=EntityType '('
	//	destinationName=STRING ',' destinationVersion=VERSION ')';
	public CycleElements getCycleAccess() {
		return pCycle;
	}
	
	public ParserRule getCycleRule() {
		return getCycleAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
