/*
 * generated by Xtext 2.11.0
 */
package at.uibk.ase.ex3.ide.contentassist.antlr;

import at.uibk.ase.ex3.ide.contentassist.antlr.internal.InternalComponentDslParser;
import at.uibk.ase.ex3.services.ComponentDslGrammarAccess;
import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class ComponentDslParser extends AbstractContentAssistParser {

	@Inject
	private ComponentDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalComponentDslParser createParser() {
		InternalComponentDslParser result = new InternalComponentDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getElementTypeAccess().getAlternatives(), "rule__ElementType__Alternatives");
					put(grammarAccess.getBasicTypeAccess().getTypeNameAlternatives_0(), "rule__BasicType__TypeNameAlternatives_0");
					put(grammarAccess.getActionAccess().getAlternatives(), "rule__Action__Alternatives");
					put(grammarAccess.getEntityBaseTypeEnumAccess().getAlternatives(), "rule__EntityBaseTypeEnum__Alternatives");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getAttributeTypeAccess().getGroup(), "rule__AttributeType__Group__0");
					put(grammarAccess.getAttributeTypeAccess().getGroup_1(), "rule__AttributeType__Group_1__0");
					put(grammarAccess.getCreateAccess().getGroup(), "rule__Create__Group__0");
					put(grammarAccess.getAddAccess().getGroup(), "rule__Add__Group__0");
					put(grammarAccess.getAddResponsibilityAccess().getGroup(), "rule__AddResponsibility__Group__0");
					put(grammarAccess.getAddDependencyAccess().getGroup(), "rule__AddDependency__Group__0");
					put(grammarAccess.getSizeAccess().getGroup(), "rule__Size__Group__0");
					put(grammarAccess.getOrderAccess().getGroup(), "rule__Order__Group__0");
					put(grammarAccess.getCycleAccess().getGroup(), "rule__Cycle__Group__0");
					put(grammarAccess.getModelAccess().getEntitiesAssignment_0(), "rule__Model__EntitiesAssignment_0");
					put(grammarAccess.getModelAccess().getActionsAssignment_1(), "rule__Model__ActionsAssignment_1");
					put(grammarAccess.getEntityAccess().getNameAssignment_1(), "rule__Entity__NameAssignment_1");
					put(grammarAccess.getEntityAccess().getParentAssignment_3(), "rule__Entity__ParentAssignment_3");
					put(grammarAccess.getEntityAccess().getAttributesAssignment_5(), "rule__Entity__AttributesAssignment_5");
					put(grammarAccess.getAttributeAccess().getTypeAssignment_0(), "rule__Attribute__TypeAssignment_0");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
					put(grammarAccess.getAttributeTypeAccess().getElementTypeAssignment_0(), "rule__AttributeType__ElementTypeAssignment_0");
					put(grammarAccess.getAttributeTypeAccess().getArrayAssignment_1_0(), "rule__AttributeType__ArrayAssignment_1_0");
					put(grammarAccess.getAttributeTypeAccess().getLengthAssignment_1_1(), "rule__AttributeType__LengthAssignment_1_1");
					put(grammarAccess.getBasicTypeAccess().getTypeNameAssignment(), "rule__BasicType__TypeNameAssignment");
					put(grammarAccess.getEntityTypeAccess().getEntityAssignment(), "rule__EntityType__EntityAssignment");
					put(grammarAccess.getCreateAccess().getNameAssignment_3(), "rule__Create__NameAssignment_3");
					put(grammarAccess.getCreateAccess().getVersionAssignment_5(), "rule__Create__VersionAssignment_5");
					put(grammarAccess.getAddAccess().getSourceAssignment_1(), "rule__Add__SourceAssignment_1");
					put(grammarAccess.getAddAccess().getSourceNameAssignment_3(), "rule__Add__SourceNameAssignment_3");
					put(grammarAccess.getAddAccess().getSourceVersionAssignment_5(), "rule__Add__SourceVersionAssignment_5");
					put(grammarAccess.getAddAccess().getDestAssignment_8(), "rule__Add__DestAssignment_8");
					put(grammarAccess.getAddAccess().getDestinationNameAssignment_10(), "rule__Add__DestinationNameAssignment_10");
					put(grammarAccess.getAddAccess().getDestinationVersionAssignment_12(), "rule__Add__DestinationVersionAssignment_12");
					put(grammarAccess.getAddResponsibilityAccess().getNameAssignment_3(), "rule__AddResponsibility__NameAssignment_3");
					put(grammarAccess.getAddResponsibilityAccess().getDestAssignment_6(), "rule__AddResponsibility__DestAssignment_6");
					put(grammarAccess.getAddResponsibilityAccess().getSourceNameAssignment_8(), "rule__AddResponsibility__SourceNameAssignment_8");
					put(grammarAccess.getAddResponsibilityAccess().getSourceVersionAssignment_10(), "rule__AddResponsibility__SourceVersionAssignment_10");
					put(grammarAccess.getAddDependencyAccess().getSourceAssignment_2(), "rule__AddDependency__SourceAssignment_2");
					put(grammarAccess.getAddDependencyAccess().getSourceNameAssignment_4(), "rule__AddDependency__SourceNameAssignment_4");
					put(grammarAccess.getAddDependencyAccess().getSourceVersionAssignment_6(), "rule__AddDependency__SourceVersionAssignment_6");
					put(grammarAccess.getAddDependencyAccess().getDestAssignment_9(), "rule__AddDependency__DestAssignment_9");
					put(grammarAccess.getAddDependencyAccess().getDestinationNameAssignment_11(), "rule__AddDependency__DestinationNameAssignment_11");
					put(grammarAccess.getAddDependencyAccess().getDestinationVersionAssignment_13(), "rule__AddDependency__DestinationVersionAssignment_13");
					put(grammarAccess.getSizeAccess().getSourceAssignment_2(), "rule__Size__SourceAssignment_2");
					put(grammarAccess.getSizeAccess().getSourceNameAssignment_4(), "rule__Size__SourceNameAssignment_4");
					put(grammarAccess.getSizeAccess().getSourceVersionAssignment_6(), "rule__Size__SourceVersionAssignment_6");
					put(grammarAccess.getOrderAccess().getSourceAssignment_3(), "rule__Order__SourceAssignment_3");
					put(grammarAccess.getOrderAccess().getSourceNameAssignment_5(), "rule__Order__SourceNameAssignment_5");
					put(grammarAccess.getOrderAccess().getSourceVersionAssignment_7(), "rule__Order__SourceVersionAssignment_7");
					put(grammarAccess.getCycleAccess().getSourceAssignment_2(), "rule__Cycle__SourceAssignment_2");
					put(grammarAccess.getCycleAccess().getSourceNameAssignment_4(), "rule__Cycle__SourceNameAssignment_4");
					put(grammarAccess.getCycleAccess().getSourceVersionAssignment_6(), "rule__Cycle__SourceVersionAssignment_6");
					put(grammarAccess.getCycleAccess().getDestAssignment_9(), "rule__Cycle__DestAssignment_9");
					put(grammarAccess.getCycleAccess().getDestinationNameAssignment_11(), "rule__Cycle__DestinationNameAssignment_11");
					put(grammarAccess.getCycleAccess().getDestinationVersionAssignment_13(), "rule__Cycle__DestinationVersionAssignment_13");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ComponentDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ComponentDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
