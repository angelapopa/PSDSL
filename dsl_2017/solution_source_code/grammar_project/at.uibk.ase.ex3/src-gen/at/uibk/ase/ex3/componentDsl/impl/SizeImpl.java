/**
 * generated by Xtext 2.11.0
 */
package at.uibk.ase.ex3.componentDsl.impl;

import at.uibk.ase.ex3.componentDsl.ComponentDslPackage;
import at.uibk.ase.ex3.componentDsl.EntityType;
import at.uibk.ase.ex3.componentDsl.Size;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Size</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link at.uibk.ase.ex3.componentDsl.impl.SizeImpl#getSource <em>Source</em>}</li>
 *   <li>{@link at.uibk.ase.ex3.componentDsl.impl.SizeImpl#getSourceName <em>Source Name</em>}</li>
 *   <li>{@link at.uibk.ase.ex3.componentDsl.impl.SizeImpl#getSourceVersion <em>Source Version</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SizeImpl extends ActionImpl implements Size
{
  /**
   * The cached value of the '{@link #getSource() <em>Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected EntityType source;

  /**
   * The default value of the '{@link #getSourceName() <em>Source Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceName()
   * @generated
   * @ordered
   */
  protected static final String SOURCE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSourceName() <em>Source Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceName()
   * @generated
   * @ordered
   */
  protected String sourceName = SOURCE_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getSourceVersion() <em>Source Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceVersion()
   * @generated
   * @ordered
   */
  protected static final String SOURCE_VERSION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSourceVersion() <em>Source Version</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSourceVersion()
   * @generated
   * @ordered
   */
  protected String sourceVersion = SOURCE_VERSION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SizeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ComponentDslPackage.Literals.SIZE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EntityType getSource()
  {
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSource(EntityType newSource, NotificationChain msgs)
  {
    EntityType oldSource = source;
    source = newSource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ComponentDslPackage.SIZE__SOURCE, oldSource, newSource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSource(EntityType newSource)
  {
    if (newSource != source)
    {
      NotificationChain msgs = null;
      if (source != null)
        msgs = ((InternalEObject)source).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ComponentDslPackage.SIZE__SOURCE, null, msgs);
      if (newSource != null)
        msgs = ((InternalEObject)newSource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ComponentDslPackage.SIZE__SOURCE, null, msgs);
      msgs = basicSetSource(newSource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComponentDslPackage.SIZE__SOURCE, newSource, newSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSourceName()
  {
    return sourceName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSourceName(String newSourceName)
  {
    String oldSourceName = sourceName;
    sourceName = newSourceName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComponentDslPackage.SIZE__SOURCE_NAME, oldSourceName, sourceName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSourceVersion()
  {
    return sourceVersion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSourceVersion(String newSourceVersion)
  {
    String oldSourceVersion = sourceVersion;
    sourceVersion = newSourceVersion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ComponentDslPackage.SIZE__SOURCE_VERSION, oldSourceVersion, sourceVersion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ComponentDslPackage.SIZE__SOURCE:
        return basicSetSource(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ComponentDslPackage.SIZE__SOURCE:
        return getSource();
      case ComponentDslPackage.SIZE__SOURCE_NAME:
        return getSourceName();
      case ComponentDslPackage.SIZE__SOURCE_VERSION:
        return getSourceVersion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ComponentDslPackage.SIZE__SOURCE:
        setSource((EntityType)newValue);
        return;
      case ComponentDslPackage.SIZE__SOURCE_NAME:
        setSourceName((String)newValue);
        return;
      case ComponentDslPackage.SIZE__SOURCE_VERSION:
        setSourceVersion((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ComponentDslPackage.SIZE__SOURCE:
        setSource((EntityType)null);
        return;
      case ComponentDslPackage.SIZE__SOURCE_NAME:
        setSourceName(SOURCE_NAME_EDEFAULT);
        return;
      case ComponentDslPackage.SIZE__SOURCE_VERSION:
        setSourceVersion(SOURCE_VERSION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ComponentDslPackage.SIZE__SOURCE:
        return source != null;
      case ComponentDslPackage.SIZE__SOURCE_NAME:
        return SOURCE_NAME_EDEFAULT == null ? sourceName != null : !SOURCE_NAME_EDEFAULT.equals(sourceName);
      case ComponentDslPackage.SIZE__SOURCE_VERSION:
        return SOURCE_VERSION_EDEFAULT == null ? sourceVersion != null : !SOURCE_VERSION_EDEFAULT.equals(sourceVersion);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (sourceName: ");
    result.append(sourceName);
    result.append(", sourceVersion: ");
    result.append(sourceVersion);
    result.append(')');
    return result.toString();
  }

} //SizeImpl
