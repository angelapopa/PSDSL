grammar uibk.dsl.assignment3.Game with org.eclipse.xtext.common.Terminals

generate game "http://www.dsl.uibk/assignment3/Game"

Adventure:
	'game' name=QualifiedName
	//('start' startScene = [Scene]) & // where to start
	//('end' endScene = [Scene]) & // when it's over
	(ingredients += Ingredient)* 
;

QualifiedName:
    ID ('.' ID)*;

// what the adventure is composed of
Ingredient:
	Scene | Object | Character | Step
;

// a scene bundles objects and contains steps to escape to a new scene
Scene:
	'scene' name = ID '{'
	('objects' '(' objects += [Object] (',' objects += [Object])* ')')?
	//'description' description = STRING
	attributes += Attribute*
	('steps' '(' step += [Step] (',' step += [Step])* ')')?
	'}'
;

AttributeType: STRING | INT;

Attribute:
	name=ID value=AttributeType
;

Character:
	'character' name = (STRING | ID) '{'
	attributes += Attribute*
	('actions' '(' actions += Action (',' actions += Action)* ')')?
	'}'
;

// objects are registered with a scene, e.g. "bomb", "mushroom", ...
Object:
	'object' name = (STRING | ID) ('is' 'a' superType=[Object])? '{'
	attributes += Attribute*
	('actions' '(' actions += Action (',' actions += Action)* ')')?
	'}'
;

Step:
	'step' name=ID '{'
	('go' scene=[Scene])? 
	(condition=Condition)?
	'}'
;
enum Operator:
	PLUS = '+' 
	| MINUS = '-'
	| MUL = "*"
	| DIV = "/"
;
Condition:
	'if' action = Action targetObject = [Object] // a step to solve the adventure, e.g., "pick up bomb" or "jump over the hole"	
	'then' 'go' scene = [Scene] ('and' character=[Character] '.' att=(STRING|ID) (op=Operator nr=INT)?)? 
	// if the encountered action is valid, open a new scene and maybe perform some calculation
	('else' 'invalid' invalidMes = STRING)? // some message if the action was invalid
;

// arbitrary actions to be used in the game
// in case they are more complex (e.g., have more parameters) you might consider rewriting them to parser rules
enum Action:
	JUMP = 'jump over' | PICK = 'pick up' | WALK = 'walk through' | ATTACK = 'attack' // | ...
;
