/**
 * generated by Xtext 2.12.0
 */
package uibk.dsl.assignment3.game.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uibk.dsl.assignment3.game.GamePackage;
import uibk.dsl.assignment3.game.Hero;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Hero</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uibk.dsl.assignment3.game.impl.HeroImpl#getHealthPoints <em>Health Points</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HeroImpl extends IngredientImpl implements Hero
{
  /**
   * The default value of the '{@link #getHealthPoints() <em>Health Points</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHealthPoints()
   * @generated
   * @ordered
   */
  protected static final String HEALTH_POINTS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getHealthPoints() <em>Health Points</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHealthPoints()
   * @generated
   * @ordered
   */
  protected String healthPoints = HEALTH_POINTS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HeroImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GamePackage.Literals.HERO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getHealthPoints()
  {
    return healthPoints;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHealthPoints(String newHealthPoints)
  {
    String oldHealthPoints = healthPoints;
    healthPoints = newHealthPoints;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GamePackage.HERO__HEALTH_POINTS, oldHealthPoints, healthPoints));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GamePackage.HERO__HEALTH_POINTS:
        return getHealthPoints();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GamePackage.HERO__HEALTH_POINTS:
        setHealthPoints((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.HERO__HEALTH_POINTS:
        setHealthPoints(HEALTH_POINTS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GamePackage.HERO__HEALTH_POINTS:
        return HEALTH_POINTS_EDEFAULT == null ? healthPoints != null : !HEALTH_POINTS_EDEFAULT.equals(healthPoints);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (healthPoints: ");
    result.append(healthPoints);
    result.append(')');
    return result.toString();
  }

} //HeroImpl
